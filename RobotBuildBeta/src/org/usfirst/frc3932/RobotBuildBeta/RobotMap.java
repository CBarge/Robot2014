// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3932.RobotBuildBeta;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController jaguarsSpeedController1;
    public static SpeedController jaguarsSpeedController2;
    public static SpeedController jaguarsSpeedController3;
    public static SpeedController jaguarsSpeedController4;
    public static SpeedController jaguarsSpeedController5;
    public static SpeedController jaguarsSpeedController6;
    public static Relay spikesSpike1;
    public static Relay spikesSpike2;
    public static Relay spikesSpike3;
    public static Relay spikesSpike4;
    public static DigitalInput sensorsLimitSwitch1;
    public static Ultrasonic sensorsUltrasonicRangefinder;
    public static Encoder sensorsIndexedEncoder1;
    public static Compressor pneumaticsCompressor;
    public static Solenoid pneumaticsSolenoid1;
    public static DoubleSolenoid pneumaticsDoubleSolenoid1;
    public static Relay pneumaticsRelaySolenoid1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        jaguarsSpeedController1 = new Jaguar(1, 1);
	LiveWindow.addActuator("Jaguars", "Speed Controller 1", (Jaguar) jaguarsSpeedController1);
        
        jaguarsSpeedController2 = new Jaguar(1, 2);
	LiveWindow.addActuator("Jaguars", "Speed Controller 2", (Jaguar) jaguarsSpeedController2);
        
        jaguarsSpeedController3 = new Jaguar(1, 3);
	LiveWindow.addActuator("Jaguars", "Speed Controller 3", (Jaguar) jaguarsSpeedController3);
        
        jaguarsSpeedController4 = new Jaguar(1, 4);
	LiveWindow.addActuator("Jaguars", "Speed Controller 4", (Jaguar) jaguarsSpeedController4);
        
        jaguarsSpeedController5 = new Jaguar(1, 5);
	LiveWindow.addActuator("Jaguars", "Speed Controller 5", (Jaguar) jaguarsSpeedController5);
        
        jaguarsSpeedController6 = new Jaguar(1, 6);
	LiveWindow.addActuator("Jaguars", "Speed Controller 6", (Jaguar) jaguarsSpeedController6);
        
        spikesSpike1 = new Relay(1, 1);
	LiveWindow.addActuator("Spikes", "Spike 1", spikesSpike1);
        
        spikesSpike2 = new Relay(1, 2);
	LiveWindow.addActuator("Spikes", "Spike 2", spikesSpike2);
        
        spikesSpike3 = new Relay(1, 3);
	LiveWindow.addActuator("Spikes", "Spike 3", spikesSpike3);
        
        spikesSpike4 = new Relay(1, 4);
	LiveWindow.addActuator("Spikes", "Spike 4", spikesSpike4);
        
        sensorsLimitSwitch1 = new DigitalInput(1, 1);
	LiveWindow.addSensor("Sensors", "Limit Switch 1", sensorsLimitSwitch1);
        
        sensorsUltrasonicRangefinder = new Ultrasonic(1, 2, 1, 3);
	LiveWindow.addSensor("Sensors", "Ultrasonic Rangefinder", sensorsUltrasonicRangefinder);
        
        sensorsIndexedEncoder1 = new Encoder(1, 4, 1, 5, 1, 6, false);
	LiveWindow.addSensor("Sensors", "Indexed Encoder 1", sensorsIndexedEncoder1);
        sensorsIndexedEncoder1.setDistancePerPulse(1.0);
        sensorsIndexedEncoder1.setPIDSourceParameter(PIDSourceParameter.kRate);
        sensorsIndexedEncoder1.start();
        pneumaticsCompressor = new Compressor(1, 7, 1, 5);
	
        
        pneumaticsSolenoid1 = new Solenoid(1, 1);
	LiveWindow.addActuator("Pneumatics", "Solenoid 1", pneumaticsSolenoid1);
        
        pneumaticsDoubleSolenoid1 = new DoubleSolenoid(1, 2, 3);      
	
        
        pneumaticsRelaySolenoid1 = new Relay(1, 6);
	LiveWindow.addActuator("Pneumatics", "Relay Solenoid 1", pneumaticsRelaySolenoid1);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
